[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "template"
dynamic = ["version"]
description = "A short description of the project"
readme = "README.md"
authors = [
    {name = "Daniel Mennell", email = "daniel.mennell@dominodatalab.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    # Add runtime dependencies here
]

# [project.urls]
# Uncomment and update these URLs when you have a repository/documentation
# Homepage = "https://github.com/yourusername/template"
# "Source Code" = "https://github.com/yourusername/template"
# Documentation = "https://template.readthedocs.io/"

[project.scripts]
template = "template.__main__:main"

[project.optional-dependencies]
dev = [
    "mypy[reports]",
    "pytest",
    "pytest-cov",
    "ruff",
    "uv",
    "pre-commit",
    "build",
    "angreal",
]

[tool.setuptools.dynamic]
version = {attr = "template.__version__"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["template*"]

[tool.setuptools.package-data]
"template" = ["py.typed"]

[tool.ruff]
src = ["src"]
line-length = 110
target-version = "py39"
exclude = [
    ".angreal",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "single"

[tool.mypy]
python_version = "3.9"
warn_unused_ignores = true
namespace_packages = true
explicit_package_bases = true
pretty = true
show_error_codes = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
show_error_context = true
color_output = true
exclude = [
    "^.angreal/.*$",
]

[[tool.mypy.overrides]]
module = "template.*"
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "--tb=short --cov=src/template --cov-report=term-missing"

[tool.coverage.run]
source = ["src/template"]
omit = [
    "*/tests/*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]